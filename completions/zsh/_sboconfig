#compdef sboconfig

# sbotools: https://pink-mist.github.io/sbotools/

_arguments \
    - info \
    '(-)'{-h,--help}'[Show help.]:' \
    '(-)'{-v,--version}'[Show version.]:' \
    '(-)'{-l,--list}'[List current configuration options (including unmodified defaults).]:' \
    '(-)'{--reset}'[Restore all default configuration options.]:' \
    - commands \
    '(-B --git-branch)'{-B,--git-branch}'[Use this git branch (instead of the default for the Slackware version).]:Git branch:()' \
    '(-b --build-ignore)'{-b,--build-ignore}'[If TRUE, then only do upgrades if the version number differs.]:ignore build number?:((TRUE\:"Version upgrades only" FALSE\:"Script bump upgrades"))' \
    '(-C --classic)'{-C,--classic}'[If TRUE, a more traditional sbotools look and feel; see the man pages before turning this on.]:use Classic Mode?:((TRUE\:"Classic Mode" FALSE\:"No Classic Mode"))' \
    '(-c --noclean)'{-c,--noclean}'[If TRUE, then do not clean working directories after build.]:clean work dirs?:((TRUE\:"Clean works directories" FALSE\:"Keep work directories"))' \
    '(-d --distclean)'{-d,--distclean}'[If TRUE, then remove source code and the package after building.]:clean source and package?:((TRUE\:"Remove source and package" FALSE\:"Keep source and package"))' \
    '(-g --gpg-verify)'{-g,--gpg-verify}'[If TRUE, then verify with gpg.]:use gpg?:((TRUE\:"Verify with gpg" FALSE\:"Do not verify"))' \
    '(-j --jobs)'{-j,--jobs}'[Number fed to -j# for make.]:number of jobs (make):()' \
    '(-O --obsolete-check)'{-o,--obsolete-check}'[if TRUE, then update the list of obsoleted scripts when running sbocheck on -current.]:update the obsolete script list on -current?:((TRUE\:"Download the file from the sbotools home page." FALSE\:"Retain the copy in /etc/sbotools."))' \
    '(-P --cpan-ignore)'{-P,--cpan-ignore}'[If TRUE, then install scripts even if they are installed from the CPAN.]:ignore CPAN modules?:((TRUE\:"Ignore CPAN modules" FALSE\:"Account for CPAN modules"))' \
    '(-p --pkg-dir)'{-p,--pkg-dir}'[Directory to store built packages in.]:package directory:_files -/' \
    '(-s --sbo-home)'{-s,--sbo-home}'[Directory for SBo tree (default /usr/sbo).]:SBo home dir:_files -/' \
    '(-o --local-overrides)'{-o,--local-overrides}'[Directory for local SlackBuild overrides.]:overrides directory:_files -/' \
    '(-V --slackware-version)'{-V,--slackware-version}'[Use SBo repo for this version (instead of /etc/slackware-version).]:Slackware version:()' \
    '(-r --repo)'{-r,--repo}'[Use git/rsync repo at URL instead of the SBo repo for your SLACKWARE_VERSION.]:repo URL:()' \
    '(-R --rsync)'{-R,--rsync}'[If TRUE, then default mirrors are rsync except for -current.]:rsync default mirror?:((TRUE\:"Default mirrors are rsync." FALSE\:"No rsync preference."))' \
    '(-S --strict-upgrades)'{-S,--strict-upgrades}'[If TRUE, then only perform non-override upgrades if the version or build number is greater.]:strict versions?:((TRUE\:"Strict upgrades only." FALSE\:"Upgrade on differing version and build number."))' \
    && return 0

return 1

# Local Variables:
# mode: sh
# End:
