.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.0102 (Pod::Simple 3.45)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "SBO::Lib::Tree 3"
.TH SBO::Lib::Tree 3 "Pungenday, The Aftermath 66, 3190 YOLD" "" "sbotools 3.2.1"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
SBO::Lib::Tree \- Routines for interacting with a SlackBuilds.org tree.
.SH SYNOPSIS
.IX Header "SYNOPSIS"
.Vb 1
\&  use SBO::Lib::tree qw/ is_local /;
\&
\&  my $bool = is_local($sbo);
.Ve
.SH SUBROUTINES
.IX Header "SUBROUTINES"
.SS get_orig_location
.IX Subsection "get_orig_location"
.Vb 1
\&  my $loc = get_orig_location($sbo);
.Ve
.PP
\&\f(CWget_orig_location()\fR returns the location in the SlackBuilds.org tree for the
given \f(CW$sbo\fR.
.SS get_sbo_location
.IX Subsection "get_sbo_location"
.Vb 2
\&  my $loc = get_sbo_location($sbo, ...);
\&  my $loc = get_sbo_location([$sbo, ...]);
.Ve
.PP
\&\f(CWget_sbo_location()\fR returns the location in \f(CW\*(C`LOCAL_OVERRIDES\*(C'\fR or the
SlackBuilds.org tree for the first \f(CW$sbo\fR given.
.PP
Specifying more than one \f(CW$sbo\fR is useful only for accessing the
filesystem once when searching or populating the internal cache. No
code does this currently.
.SS get_sbo_locations
.IX Subsection "get_sbo_locations"
.Vb 1
\&  my %locations = get_sbo_locations(@sbos);
.Ve
.PP
\&\f(CW\*(C`get_sbo_locations\*(C'\fR finds all SlackBuilds in \f(CW@sbos\fR, returns a hash matching each
package name to its location.
.SS is_local
.IX Subsection "is_local"
.Vb 1
\&  my $bool = is_local($sbo);
.Ve
.PP
\&\f(CWis_local()\fR checks whether the given \f(CW$sbo\fR is in the \f(CW\*(C`LOCAL_OVERRIDES\*(C'\fR or
not. The return value is true if it is, and false if it is not.
.SH AUTHORS
.IX Header "AUTHORS"
SBO::Lib was originally written by Jacob Pipkin <j@dawnrazor.net> with
contributions from Luke Williams <xocel@iquidus.org> and Andreas
Guldstrand <andreas.guldstrand@gmail.com>.
.PP
SBO::Lib is maintained by K. Eugene Carlson <kvngncrlsn@gmail.com>.
.SH LICENSE
.IX Header "LICENSE"
The sbotools are licensed under the MIT License.
.PP
Copyright (C) 2012\-2017, Jacob Pipkin, Luke Williams, Andreas Guldstrand.
.PP
Copyright (C) 2024, K. Eugene Carlson.
